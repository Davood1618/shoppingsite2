{"ast":null,"code":"var _jsxFileName = \"D:\\\\practice\\\\react\\\\sabzlearn1\\\\frontend\\\\src\\\\pages\\\\YouTubeForm\\\\YouTubeForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './YouTubeForm.css';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function YouTubeForm() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onsubmit = () => {\n    console.log(\"data\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onsubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"login form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter your login credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"first\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"first\",\n          name: \"first\",\n          placeholder: \"Enter your Username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"Enter your Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Not registered?\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          style: {\n            textDecoration: 'none'\n          },\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 1\n  }, this);\n} // Assuming solve is a function you want to call on form submission\n\n_s(YouTubeForm, \"8roZbteNotWM4vL9i/xLjU70dkA=\", false, function () {\n  return [useForm];\n});\n\n_c = YouTubeForm;\n\nfunction solve() {\n  console.log('Form submitted');\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"YouTubeForm\");","map":{"version":3,"names":["React","useForm","SubmitHandler","YouTubeForm","register","handleSubmit","watch","formState","errors","onsubmit","console","log","textDecoration","solve"],"sources":["D:/practice/react/sabzlearn1/frontend/src/pages/YouTubeForm/YouTubeForm.jsx"],"sourcesContent":["import React from 'react'\r\nimport './YouTubeForm.css'\r\nimport { useForm, SubmitHandler } from \"react-hook-form\"\r\n\r\n\r\nexport default function YouTubeForm() {\r\n\r\n      const {\r\n            register,\r\n            handleSubmit,\r\n            watch,\r\n            formState: { errors },\r\n          } = useForm()\r\n\r\nconst onsubmit =()=>{\r\n      console.log(\"data\")\r\n}  \r\n\r\n  return (\r\n\r\n<form action='' onSubmit={handleSubmit(onsubmit)}>\r\n\r\n\r\n\r\n          <div className=\"main\">\r\n            <h1>login form</h1>\r\n            <h3>Enter your login credentials</h3>\r\n            <form action=\"\">\r\n              <label htmlFor=\"first\">Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"first\"\r\n                name=\"first\"\r\n                placeholder=\"Enter your Username\"\r\n                required\r\n              />\r\n      \r\n              <label htmlFor=\"password\">Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter your Password\"\r\n                required\r\n              />\r\n      \r\n              <div className=\"wrap\">\r\n                <button type=\"submit\" >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <p>\r\n              Not registered?{' '}\r\n              <a href=\"#\" style={{ textDecoration: 'none' }}>\r\n                Create an account\r\n              </a>\r\n            </p>\r\n          </div>\r\n\r\n          </form>\r\n        );\r\n      }\r\n      \r\n      // Assuming solve is a function you want to call on form submission\r\n      function solve() {\r\n        console.log('Form submitted');\r\n      }\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,iBAAvC;;AAGA,eAAe,SAASC,WAAT,GAAuB;EAAA;;EAEhC,MAAM;IACAC,QADA;IAEAC,YAFA;IAGAC,KAHA;IAIAC,SAAS,EAAE;MAAEC;IAAF;EAJX,IAKEP,OAAO,EALf;;EAON,MAAMQ,QAAQ,GAAE,MAAI;IACdC,OAAO,CAACC,GAAR,CAAY,MAAZ;EACL,CAFD;;EAIE,oBAEF;IAAM,MAAM,EAAC,EAAb;IAAgB,QAAQ,EAAEN,YAAY,CAACI,QAAD,CAAtC;IAAA,uBAIU;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAM,MAAM,EAAC,EAAb;QAAA,wBACE;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,EAAE,EAAC,OAFL;UAGE,IAAI,EAAC,OAHP;UAIE,WAAW,EAAC,qBAJd;UAKE,QAAQ;QALV;UAAA;UAAA;UAAA;QAAA,QAFF,eAUE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAVF,eAWE;UACE,IAAI,EAAC,UADP;UAEE,EAAE,EAAC,UAFL;UAGE,IAAI,EAAC,UAHP;UAIE,WAAW,EAAC,qBAJd;UAKE,QAAQ;QALV;UAAA;UAAA;UAAA;QAAA,QAXF,eAmBE;UAAK,SAAS,EAAC,MAAf;UAAA,uBACE;YAAQ,IAAI,EAAC,QAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAnBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eA4BE;QAAA,8BACkB,GADlB,eAEE;UAAG,IAAI,EAAC,GAAR;UAAY,KAAK,EAAE;YAAEG,cAAc,EAAE;UAAlB,CAAnB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QA5BF;IAAA;MAAA;MAAA;MAAA;IAAA;EAJV;IAAA;IAAA;IAAA;EAAA,QAFE;AA4CK,C,CAED;;GA3DkBT,W;UAOVF,O;;;KAPUE,W;;AA4DlB,SAASU,KAAT,GAAiB;EACfH,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD"},"metadata":{},"sourceType":"module"}