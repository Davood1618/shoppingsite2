{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar littleStateMachine = require('little-state-machine');\n\nvar React = require('react');\n\nvar uuid = require('uuid');\n\nvar reactSimpleAnimate = require('react-simple-animate');\n\nvar styled = require('@emotion/styled');\n\nvar isUndefined$1 = require('lodash/isUndefined');\n\nvar isObject$1 = require('lodash/isObject');\n\nvar get$1 = require('lodash/get');\n\nvar useDeepCompareEffect = require('use-deep-compare-effect');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);\n\nvar isUndefined__default = /*#__PURE__*/_interopDefaultLegacy(isUndefined$1);\n\nvar isObject__default = /*#__PURE__*/_interopDefaultLegacy(isObject$1);\n\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get$1);\n\nvar useDeepCompareEffect__default = /*#__PURE__*/_interopDefaultLegacy(useDeepCompareEffect);\n\nvar isCheckBoxInput = element => element.type === 'checkbox';\n\nvar isDateObject = value => value instanceof Date;\n\nvar isNullOrUndefined = value => value == null;\n\nconst isObjectType = value => typeof value === 'object';\n\nvar isObject = value => !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !isDateObject(value);\n\nvar getEventValue = event => isObject(event) && event.target ? isCheckBoxInput(event.target) ? event.target.checked : event.target.value : event;\n\nvar getNodeParentName = name => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = tempObject => {\n  const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n  return isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf');\n};\n\nvar isWeb = typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined' && typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n  let copy;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) && (isArray || isObject(data))) {\n    copy = isArray ? [] : {};\n\n    if (!Array.isArray(data) && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        copy[key] = cloneObject(data[key]);\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n\nvar compact = value => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = val => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n  return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;\n};\n\nconst EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change'\n};\nconst VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all'\n};\nconst INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nconst HookFormContext = React__default[\"default\"].createContext(null);\n/**\r\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @returns return all useForm methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\n\nconst useFormContext = () => React__default[\"default\"].useContext(HookFormContext);\n\nvar getProxyFormState = function (formState, control, localProxyFormState) {\n  let isRoot = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const result = {\n    defaultValues: control._defaultValues\n  };\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      }\n    });\n  }\n\n  return result;\n};\n\nvar isEmptyObject = value => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n  updateFormState(formStateData);\n  const {\n    name,\n    ...formState\n  } = formStateData;\n  return isEmptyObject(formState) || Object.keys(formState).length >= Object.keys(_proxyFormState).length || Object.keys(formState).find(key => _proxyFormState[key] === (!isRoot || VALIDATION_MODE.all));\n};\n\nvar convertToArrayPayload = value => Array.isArray(value) ? value : [value];\n\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName ? name === signalName : !name || !signalName || name === signalName || convertToArrayPayload(name).some(currentName => currentName && (currentName.startsWith(signalName) || signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\n  const _props = React__default[\"default\"].useRef(props);\n\n  _props.current = props;\n  React__default[\"default\"].useEffect(() => {\n    const subscription = !props.disabled && _props.current.subject && _props.current.subject.subscribe({\n      next: _props.current.next\n    });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n/**\r\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\r\n *\r\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, control } = useForm({\r\n *     defaultValues: {\r\n *     firstName: \"firstName\"\r\n *   }});\r\n *   const { dirtyFields } = useFormState({\r\n *     control\r\n *   });\r\n *   const onSubmit = (data) => console.log(data);\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\r\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\n\n\nfunction useFormState(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    disabled,\n    name,\n    exact\n  } = props || {};\n  const [formState, updateFormState] = React__default[\"default\"].useState(control._formState);\n\n  const _mounted = React__default[\"default\"].useRef(true);\n\n  const _localProxyFormState = React__default[\"default\"].useRef({\n    isDirty: false,\n    isLoading: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  });\n\n  const _name = React__default[\"default\"].useRef(name);\n\n  _name.current = name;\n  useSubscribe({\n    disabled,\n    next: value => _mounted.current && shouldSubscribeByName(_name.current, value.name, exact) && shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) && updateFormState({ ...control._formState,\n      ...value\n    }),\n    subject: control._subjects.state\n  });\n  React__default[\"default\"].useEffect(() => {\n    _mounted.current = true;\n\n    const isDirty = control._proxyFormState.isDirty && control._getDirty();\n\n    if (isDirty !== control._formState.isDirty) {\n      control._subjects.state.next({\n        isDirty\n      });\n    }\n\n    _localProxyFormState.current.isValid && control._updateValid(true);\n    return () => {\n      _mounted.current = false;\n    };\n  }, [control]);\n  return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\n\nvar isString = value => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(fieldName => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n  }\n\n  isGlobal && (_names.watchAll = true);\n  return formValues;\n};\n/**\r\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\r\n *\r\n * @remarks\r\n *\r\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\r\n *\r\n * @example\r\n * ```tsx\r\n * const { watch } = useForm();\r\n * const values = useWatch({\r\n *   name: \"fieldName\"\r\n *   control,\r\n * })\r\n * ```\r\n */\n\n\nfunction useWatch(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact\n  } = props || {};\n\n  const _name = React__default[\"default\"].useRef(name);\n\n  _name.current = name;\n  useSubscribe({\n    disabled,\n    subject: control._subjects.values,\n    next: formState => {\n      if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n        updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n      }\n    }\n  });\n  const [value, updateValue] = React__default[\"default\"].useState(control._getWatch(name, defaultValue));\n  React__default[\"default\"].useEffect(() => control._removeUnmounted());\n  return value;\n}\n\nvar isKey = value => /^\\w*$/.test(value);\n\nvar stringToPath = input => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index + 1]) ? [] : {};\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n\n  return object;\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria ? { ...errors[name],\n  types: { ...(errors[name] && errors[name].types ? errors[name].types : {}),\n    [type]: message || true\n  }\n} : {};\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const {\n        _f,\n        ...currentField\n      } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus) {\n          _f.ref.focus();\n\n          break;\n        } else if (_f.refs && _f.refs[0].focus) {\n          _f.refs[0].focus();\n\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\n\nvar getValidationModes = mode => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched\n});\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent && (_names.watchAll || _names.watch.has(name) || [..._names.watch].some(watchName => name.startsWith(watchName) && /^\\.\\w+/.test(name.slice(watchName.length))));\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n\nvar isBoolean = value => typeof value === 'boolean';\n\nvar isFileInput = element => element.type === 'file';\n\nvar isFunction = value => typeof value === 'function';\n\nvar isHTMLElement = value => {\n  if (!isWeb) {\n    return false;\n  }\n\n  const owner = value ? value.ownerDocument : 0;\n  return value instanceof (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement);\n};\n\nvar isMessage = value => isString(value);\n\nvar isRadioInput = element => element.type === 'radio';\n\nvar isRegex = value => value instanceof RegExp;\n\nconst defaultResult = {\n  value: false,\n  isValid: false\n};\nconst validResult = {\n  value: true,\n  isValid: true\n};\n\nvar getCheckboxValue = options => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options.filter(option => option && option.checked && !option.disabled).map(option => option.value);\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n\n    return options[0].checked && !options[0].disabled ? // @ts-expect-error expected to work in the browser\n    options[0].attributes && !isUndefined(options[0].attributes.value) ? isUndefined(options[0].value) || options[0].value === '' ? validResult : {\n      value: options[0].value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n\n  return defaultResult;\n};\n\nconst defaultReturn = {\n  isValid: false,\n  value: null\n};\n\nvar getRadioValue = options => Array.isArray(options) ? options.reduce((previous, option) => option && option.checked && !option.disabled ? {\n  isValid: true,\n  value: option.value\n} : previous, defaultReturn) : defaultReturn;\n\nfunction getValidateError(result, ref) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n\n  if (isMessage(result) || Array.isArray(result) && result.every(isMessage) || isBoolean(result) && !result) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref\n    };\n  }\n}\n\nvar getValueAndMessage = validationData => isObject(validationData) && !isRegex(validationData) ? validationData : {\n  value: validationData,\n  message: ''\n};\n\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled\n  } = field._f;\n  const inputValue = get(formValues, name);\n\n  if (!mount || disabled) {\n    return {};\n  }\n\n  const inputRef = refs ? refs[0] : ref;\n\n  const setCustomValidity = message => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n\n  const error = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = (valueAsNumber || isFileInput(ref)) && isUndefined(ref.value) && isUndefined(inputValue) || isHTMLElement(ref) && ref.value === '' || inputValue === '' || Array.isArray(inputValue) && !inputValue.length;\n  const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n\n  const getMinMaxMessage = function (exceedMax, maxLengthMessage, minLengthMessage) {\n    let maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n    let minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message)\n    };\n  };\n\n  if (isFieldArray ? !Array.isArray(inputValue) || !inputValue.length : required && (!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue)) || isBoolean(inputValue) && !inputValue || isCheckBox && !getCheckboxValue(refs).isValid || isRadio && !getRadioValue(refs).isValid)) {\n    const {\n      value,\n      message\n    } = isMessage(required) ? {\n      value: !!required,\n      message: required\n    } : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message)\n      };\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n      const valueNumber = ref.valueAsNumber || (inputValue ? +inputValue : inputValue);\n\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate = ref.valueAsDate || new Date(inputValue);\n\n      const convertTimeToDate = time => new Date(new Date().toDateString() + ' ' + time);\n\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value) : isWeek ? inputValue > maxOutput.value : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value) : isWeek ? inputValue < minOutput.value : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name].message);\n        return error;\n      }\n    }\n  }\n\n  if ((maxLength || minLength) && !isEmpty && (isString(inputValue) || isFieldArray && Array.isArray(inputValue))) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax = !isNullOrUndefined(maxLengthOutput.value) && inputValue.length > maxLengthOutput.value;\n    const exceedMin = !isNullOrUndefined(minLengthOutput.value) && inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name].message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const {\n      value: patternValue,\n      message\n    } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message)\n      };\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = { ...validateError,\n          ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message)\n        };\n\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {};\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n\n        if (validateError) {\n          validationResult = { ...validateError,\n            ...appendErrorsCurry(key, validateError.message)\n          };\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult\n        };\n\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj) {\n  for (const key in obj) {\n    if (!isUndefined(obj[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction unset(object, path) {\n  const paths = Array.isArray(path) ? path : isKey(path) ? [path] : stringToPath(path);\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n  const index = paths.length - 1;\n  const key = paths[index];\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  if (index !== 0 && (isObject(childObject) && isEmptyObject(childObject) || Array.isArray(childObject) && isEmptyArray(childObject))) {\n    unset(object, paths.slice(0, -1));\n  }\n\n  return object;\n}\n\nfunction createSubject() {\n  let _observers = [];\n\n  const next = value => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n\n  const subscribe = observer => {\n    _observers.push(observer);\n\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter(o => o !== observer);\n      }\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n\n    next,\n    subscribe,\n    unsubscribe\n  };\n}\n\nvar isPrimitive = value => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (isDateObject(val1) && isDateObject(val2) || isObject(val1) && isObject(val2) || Array.isArray(val1) && Array.isArray(val2) ? !deepEqual(val1, val2) : val1 !== val2) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nvar isMultipleSelect = element => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = ref => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = ref => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = data => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction markFieldsDirty(data) {\n  let fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key])) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key])) {\n        if (isUndefined(formValues) || isPrimitive(dirtyFieldsFromValues[key])) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key]) ? markFieldsDirty(data[key], []) : { ...markFieldsDirty(data[key])\n          };\n        } else {\n          getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, _ref) => {\n  let {\n    valueAsNumber,\n    valueAsDate,\n    setValueAs\n  } = _ref;\n  return isUndefined(value) ? value : valueAsNumber ? value === '' ? NaN : value ? +value : value : valueAsDate && isString(value) ? new Date(value) : setValueAs ? setValueAs(value) : value;\n};\n\nfunction getFieldValue(_f) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every(ref => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(_ref2 => {\n      let {\n        value\n      } = _ref2;\n      return value;\n    });\n  }\n\n  if (isCheckBoxInput(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n  const fields = {};\n\n  for (const name of fieldsNames) {\n    const field = get(_fields, name);\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames],\n    fields,\n    shouldUseNativeValidation\n  };\n};\n\nvar getRuleValue = rule => isUndefined(rule) ? rule : isRegex(rule) ? rule.source : isObject(rule) ? isRegex(rule.value) ? rule.value.source : rule.value : rule;\n\nvar hasValidation = options => options.mount && (options.required || options.min || options.max || options.maxLength || options.minLength || options.pattern || options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return {\n        name\n      };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name\n  };\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n\n  return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true\n};\n\nfunction createFormControl() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let flushRootRender = arguments.length > 1 ? arguments[1] : undefined;\n  let _options = { ...defaultOptions,\n    ...props\n  };\n  let _formState = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: true,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {}\n  };\n  let _fields = {};\n\n  let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values) ? cloneObject(_options.defaultValues || _options.values) || {} : {};\n\n  let _formValues = _options.shouldUnregister ? {} : cloneObject(_defaultValues);\n\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false\n  };\n  let _names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set()\n  };\n  let delayErrorCallback;\n  let timer = 0;\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  };\n  const _subjects = {\n    values: createSubject(),\n    array: createSubject(),\n    state: createSubject()\n  };\n  const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce = callback => wait => {\n    clearTimeout(timer);\n    timer = setTimeout(callback, wait);\n  };\n\n  const _updateValid = async shouldUpdateValid => {\n    if (_proxyFormState.isValid || shouldUpdateValid) {\n      const isValid = _options.resolver ? isEmptyObject((await _executeSchema()).errors) : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = value => _proxyFormState.isValidating && _subjects.state.next({\n    isValidating: value\n  });\n\n  const _updateFieldArray = function (name) {\n    let values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let method = arguments.length > 2 ? arguments[2] : undefined;\n    let args = arguments.length > 3 ? arguments[3] : undefined;\n    let shouldSetValues = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let shouldUpdateFieldsAndState = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n\n    if (args && method) {\n      _state.action = true;\n\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_formState.errors, name))) {\n        const errors = method(get(_formState.errors, name), args.argA, args.argB);\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (_proxyFormState.touchedFields && shouldUpdateFieldsAndState && Array.isArray(get(_formState.touchedFields, name))) {\n        const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name, error) => {\n    set(_formState.errors, name, error);\n\n    _subjects.state.next({\n      errors: _formState.errors\n    });\n  };\n\n  const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n    const field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n      isUndefined(defaultValue) || ref && ref.defaultChecked || shouldSkipSetValueAs ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f)) : setFieldValue(name, defaultValue);\n      _state.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output = {\n      name\n    };\n\n    if (!isBlurEvent || shouldDirty) {\n      if (_proxyFormState.isDirty) {\n        isPreviousDirty = _formState.isDirty;\n        _formState.isDirty = output.isDirty = _getDirty();\n        shouldUpdateField = isPreviousDirty !== output.isDirty;\n      }\n\n      const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n      isPreviousDirty = get(_formState.dirtyFields, name);\n      isCurrentFieldPristine ? unset(_formState.dirtyFields, name) : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      shouldUpdateField = shouldUpdateField || _proxyFormState.dirtyFields && isPreviousDirty !== !isCurrentFieldPristine;\n    }\n\n    if (isBlurEvent) {\n      const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField = shouldUpdateField || _proxyFormState.touchedFields && isPreviousFieldTouched !== isBlurEvent;\n      }\n    }\n\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (name, isValid, error, fieldState) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid = _proxyFormState.isValid && isBoolean(isValid) && _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n    }\n\n    if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) || !isEmptyObject(fieldState) || shouldUpdateValid) {\n      const updatedFormState = { ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? {\n          isValid\n        } : {}),\n        errors: _formState.errors,\n        name\n      };\n      _formState = { ..._formState,\n        ...updatedFormState\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    _updateIsValidating(false);\n  };\n\n  const _executeSchema = async name => _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n\n  const executeSchemaAndUpdateState = async names => {\n    const {\n      errors\n    } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async function (fields, shouldOnlyCheckValid) {\n    let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      valid: true\n    };\n\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const {\n          _f,\n          ...fieldValue\n        } = field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n\n          const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation, isFieldArrayRoot);\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid && (get(fieldError, _f.name) ? isFieldArrayRoot ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name) : set(_formState.errors, _f.name, fieldError[_f.name]) : unset(_formState.errors, _f.name));\n        }\n\n        fieldValue && (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field = get(_fields, name);\n      field && (field._f.refs ? field._f.refs.every(ref => !live(ref)) : !live(field._f.ref)) && unregister(name);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty = (name, data) => (name && data && set(_formValues, name, data), !deepEqual(getValues(), _defaultValues));\n\n  const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, { ...(_state.mount ? _formValues : isUndefined(defaultValue) ? _defaultValues : isString(names) ? {\n      [names]: defaultValue\n    } : defaultValue)\n  }, isGlobal, defaultValue);\n\n  const _getFieldArray = name => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n\n  const setFieldValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const field = get(_fields, name);\n    let fieldValue = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled && set(_formValues, name, getFieldValueAs(value, fieldReference));\n        fieldValue = isHTMLElement(fieldReference.ref) && isNullOrUndefined(value) ? '' : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(optionRef => optionRef.selected = fieldValue.includes(optionRef.value));\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1 ? fieldReference.refs.forEach(checkboxRef => (!checkboxRef.defaultChecked || !checkboxRef.disabled) && (checkboxRef.checked = Array.isArray(fieldValue) ? !!fieldValue.find(data => data === checkboxRef.value) : fieldValue === checkboxRef.value)) : fieldReference.refs[0] && (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(radioRef => radioRef.checked = radioRef.value === fieldValue);\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.values.next({\n              name,\n              values: { ..._formValues\n              }\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) && updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n    options.shouldValidate && trigger(name);\n  };\n\n  const setValues = (name, value, options) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n      (_names.array.has(name) || !isPrimitive(fieldValue) || field && !field._f) && !isDateObject(fieldValue) ? setValues(fieldName, fieldValue, options) : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const field = get(_fields, name);\n\n    const isFieldArray = _names.array.has(name);\n\n    const cloneValue = cloneObject(value);\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: { ..._formValues\n        }\n      });\n\n      if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) && options.shouldDirty) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue)\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue) ? setValues(name, cloneValue, options) : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({ ..._formState\n    });\n\n    _subjects.values.next({\n      name,\n      values: { ..._formValues\n      }\n    });\n\n    !_state.mount && flushRootRender();\n  };\n\n  const onChange = async event => {\n    const target = event.target;\n    let name = target.name;\n    const field = get(_fields, name);\n\n    const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation = !hasValidation(field._f) && !_options.resolver && !get(_formState.errors, name) && !field._f.deps || skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n      const watched = isWatched(name, _names, isBlurEvent);\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n      !isBlurEvent && _subjects.values.next({\n        name,\n        type: event.type,\n        values: { ..._formValues\n        }\n      });\n\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n        return shouldRender && _subjects.state.next({\n          name,\n          ...(watched ? {} : fieldState)\n        });\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({ ..._formState\n      });\n\n      _updateIsValidating(true);\n\n      if (_options.resolver) {\n        const {\n          errors\n        } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n        const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n\n        if (error) {\n          isValid = false;\n        } else if (_proxyFormState.isValid) {\n          isValid = await executeBuiltInValidation(_fields, true);\n        }\n      }\n\n      field._f.deps && trigger(field._f.deps);\n      shouldRenderByError(name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger = async function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name);\n\n    _updateIsValidating(true);\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n      isValid = isEmptyObject(errors);\n      validationResult = name ? !fieldNames.some(name => get(errors, name)) : isValid;\n    } else if (name) {\n      validationResult = (await Promise.all(fieldNames.map(async fieldName => {\n        const field = get(_fields, fieldName);\n        return await executeBuiltInValidation(field && field._f ? {\n          [fieldName]: field\n        } : field);\n      }))).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({ ...(!isString(name) || _proxyFormState.isValid && isValid !== _formState.isValid ? {} : {\n        name\n      }),\n      ...(_options.resolver || !name ? {\n        isValid\n      } : {}),\n      errors: _formState.errors,\n      isValidating: false\n    });\n\n    options.shouldFocus && !validationResult && focusFieldBy(_fields, key => key && get(_formState.errors, key), name ? fieldNames : _names.mount);\n    return validationResult;\n  };\n\n  const getValues = fieldNames => {\n    const values = { ..._defaultValues,\n      ...(_state.mount ? _formValues : {})\n    };\n    return isUndefined(fieldNames) ? values : isString(fieldNames) ? get(values, fieldNames) : fieldNames.map(name => get(values, name));\n  };\n\n  const getFieldState = (name, formState) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name)\n  });\n\n  const clearErrors = name => {\n    name && convertToArrayPayload(name).forEach(inputName => unset(_formState.errors, inputName));\n\n    _subjects.state.next({\n      errors: name ? _formState.errors : {}\n    });\n  };\n\n  const setError = (name, error, options) => {\n    const ref = (get(_fields, name, {\n      _f: {}\n    })._f || {}).ref;\n    set(_formState.errors, name, { ...error,\n      ref\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch = (name, defaultValue) => isFunction(name) ? _subjects.values.subscribe({\n    next: payload => name(_getWatch(undefined, defaultValue), payload)\n  }) : _getWatch(name, defaultValue, true);\n\n  const unregister = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister && !options.keepDefaultValue && unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.values.next({\n      values: { ..._formValues\n      }\n    });\n\n    _subjects.state.next({ ..._formState,\n      ...(!options.keepDirty ? {} : {\n        isDirty: _getDirty()\n      })\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n    set(_fields, name, { ...(field || {}),\n      _f: { ...(field && field._f ? field._f : {\n          ref: {\n            name\n          }\n        }),\n        name,\n        mount: true,\n        ...options\n      }\n    });\n\n    _names.mount.add(name);\n\n    field ? disabledIsDefined && set(_formValues, name, options.disabled ? undefined : get(_formValues, name, getFieldValue(field._f))) : updateValidAndValue(name, true, options.value);\n    return { ...(disabledIsDefined ? {\n        disabled: options.disabled\n      } : {}),\n      ...(_options.shouldUseNativeValidation ? {\n        required: !!options.required,\n        min: getRuleValue(options.min),\n        max: getRuleValue(options.max),\n        minLength: getRuleValue(options.minLength),\n        maxLength: getRuleValue(options.maxLength),\n        pattern: getRuleValue(options.pattern)\n      } : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: ref => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n          const fieldRef = isUndefined(ref.value) ? ref.querySelectorAll ? ref.querySelectorAll('input,select,textarea')[0] || ref : ref : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (radioOrCheckbox ? refs.find(option => option === fieldRef) : fieldRef === field._f.ref) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: { ...field._f,\n              ...(radioOrCheckbox ? {\n                refs: [...refs.filter(live), fieldRef, ...(Array.isArray(get(_defaultValues, name)) ? [{}] : [])],\n                ref: {\n                  type: fieldRef.type,\n                  name\n                }\n              } : {\n                ref: fieldRef\n              })\n            }\n          });\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) && !(isNameInFieldArray(_names.array, name) && _state.action) && _names.unMount.add(name);\n        }\n      }\n    };\n  };\n\n  const _focusError = () => _options.shouldFocusError && focusFieldBy(_fields, key => key && get(_formState.errors, key), _names.mount);\n\n  const handleSubmit = (onValid, onInvalid) => async e => {\n    if (e) {\n      e.preventDefault && e.preventDefault();\n      e.persist && e.persist();\n    }\n\n    let fieldValues = cloneObject(_formValues);\n\n    _subjects.state.next({\n      isSubmitting: true\n    });\n\n    if (_options.resolver) {\n      const {\n        errors,\n        values\n      } = await _executeSchema();\n      _formState.errors = errors;\n      fieldValues = values;\n    } else {\n      await executeBuiltInValidation(_fields);\n    }\n\n    unset(_formState.errors, 'root');\n\n    if (isEmptyObject(_formState.errors)) {\n      _subjects.state.next({\n        errors: {}\n      });\n\n      await onValid(fieldValues, e);\n    } else {\n      if (onInvalid) {\n        await onInvalid({ ..._formState.errors\n        }, e);\n      }\n\n      _focusError();\n\n      setTimeout(_focusError);\n    }\n\n    _subjects.state.next({\n      isSubmitted: true,\n      isSubmitting: false,\n      isSubmitSuccessful: isEmptyObject(_formState.errors),\n      submitCount: _formState.submitCount + 1,\n      errors: _formState.errors\n    });\n  };\n\n  const resetField = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue ? _getDirty(name, get(_defaultValues, name)) : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState\n      });\n    }\n  };\n\n  const _reset = function (formValues) {\n    let keepStateOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values = formValues && !isEmptyObject(formValues) ? cloneUpdatedValues : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName) ? set(values, fieldName, get(_formValues, fieldName)) : setValue(fieldName, get(values, fieldName));\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs) ? field._f.refs[0] : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister ? keepStateOptions.keepDefaultValues ? cloneObject(_defaultValues) : {} : cloneUpdatedValues;\n\n      _subjects.array.next({\n        values: { ...values\n        }\n      });\n\n      _subjects.values.next({\n        values: { ...values\n        }\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: ''\n    };\n    !_state.mount && flushRootRender();\n    _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n    _state.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount ? _formState.submitCount : 0,\n      isDirty: keepStateOptions.keepDirty ? _formState.isDirty : !!(keepStateOptions.keepDefaultValues && !deepEqual(formValues, _defaultValues)),\n      isSubmitted: keepStateOptions.keepIsSubmitted ? _formState.isSubmitted : false,\n      dirtyFields: keepStateOptions.keepDirtyValues ? _formState.dirtyFields : keepStateOptions.keepDefaultValues && formValues ? getDirtyFields(_defaultValues, formValues) : {},\n      touchedFields: keepStateOptions.keepTouched ? _formState.touchedFields : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false\n    });\n  };\n\n  const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues) ? formValues(_formValues) : formValues, keepStateOptions);\n\n  const setFocus = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs ? fieldReference.refs[0] : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n\n  const _updateFormState = updatedFormState => {\n    _formState = { ..._formState,\n      ...updatedFormState\n    };\n  };\n\n  if (isFunction(_options.defaultValues)) {\n    _options.defaultValues().then(values => {\n      reset(values, _options.resetOptions);\n\n      _subjects.state.next({\n        isLoading: false\n      });\n    });\n  }\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _reset,\n      _updateFormState,\n      _subjects,\n      _proxyFormState,\n\n      get _fields() {\n        return _fields;\n      },\n\n      get _formValues() {\n        return _formValues;\n      },\n\n      get _state() {\n        return _state;\n      },\n\n      set _state(value) {\n        _state = value;\n      },\n\n      get _defaultValues() {\n        return _defaultValues;\n      },\n\n      get _names() {\n        return _names;\n      },\n\n      set _names(value) {\n        _names = value;\n      },\n\n      get _formState() {\n        return _formState;\n      },\n\n      set _formState(value) {\n        _formState = value;\n      },\n\n      get _options() {\n        return _options;\n      },\n\n      set _options(value) {\n        _options = { ..._options,\n          ...value\n        };\n      }\n\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState\n  };\n}\n/**\r\n * Custom hook to manage the entire form.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\r\n *\r\n * @param props - form configuration and validation parameters.\r\n *\r\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   console.log(watch(\"example\"));\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input defaultValue=\"test\" {...register(\"example\")} />\r\n *       <input {...register(\"exampleRequired\", { required: true })} />\r\n *       {errors.exampleRequired && <span>This field is required</span>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\n\n\nfunction useForm() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const _formControl = React__default[\"default\"].useRef();\n\n  const [formState, updateFormState] = React__default[\"default\"].useState({\n    isDirty: false,\n    isValidating: false,\n    isLoading: true,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: isFunction(props.defaultValues) ? undefined : props.defaultValues\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = { ...createFormControl(props, () => updateFormState(formState => ({ ...formState\n      }))),\n      formState\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n  useSubscribe({\n    subject: control._subjects.state,\n    next: value => {\n      if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n        updateFormState({ ...control._formState\n        });\n      }\n    }\n  });\n  React__default[\"default\"].useEffect(() => {\n    if (props.values && !deepEqual(props.values, control._defaultValues)) {\n      control._reset(props.values, control._options.resetOptions);\n    }\n  }, [props.values, control]);\n  React__default[\"default\"].useEffect(() => {\n    if (!control._state.mount) {\n      control._updateValid();\n\n      control._state.mount = true;\n    }\n\n    if (control._state.watch) {\n      control._state.watch = false;\n\n      control._subjects.state.next({ ...control._formState\n      });\n    }\n\n    control._removeUnmounted();\n  });\n  _formControl.current.formState = getProxyFormState(formState, control);\n  return _formControl.current;\n}\n\nvar colors = {\n  primary: '#0e101c',\n  secondary: '#bf1650',\n  lightBlue: '#516391',\n  blue: '#1e2a4a',\n  lightPink: '#ec5990',\n  errorPink: '#fbecf2',\n  buttonBlue: '#191d3a',\n  link: '#ff7aa8',\n  green: '#1bda2b'\n};\nconst paraGraphDefaultStyle = {\n  fontSize: 13,\n  lineHeight: '20px'\n};\nconst Button = styled__default[\"default\"].button`\n  appearance: none;\n  margin: 0;\n  border: 0;\n  color: white;\n  padding: 5px !important;\n  border-radius: 0 !important;\n  background: ${props => props.hideBackground ? `` : `${colors.blue} !important`};\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n`;\nButton.defaultProps = {\n  type: 'button'\n};\nconst CircleButton = styled__default[\"default\"](Button)`\n  font-size: 14px;\n  font-weight: bold;\n  margin: 0 4px 0 auto;\n  background: none !important;\n  display: flex;\n  width: 25px;\n  height: 25px;\n  justify-content: center;\n  line-height: 14px !important;\n  border-radius: 50% !important;\n  padding: 0 !important;\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n\n  &:active {\n    background: black;\n  }\n`;\nconst Input = styled__default[\"default\"].input`\n  &::placeholder {\n    color: #b3b3b3;\n  }\n\n  &:focus::placeholder {\n    color: white;\n  }\n`;\nconst Table = styled__default[\"default\"].table`\n  transition: 0.3s all;\n\n  &:hover {\n    background: ${colors.primary};\n  }\n`;\n\nconst Header = _ref3 => {\n  let {\n    setVisible,\n    control\n  } = _ref3;\n  const {\n    isValid\n  } = useFormState({\n    control\n  });\n  return React__namespace.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: 10,\n      backgroundColor: 'transparent'\n    }\n  }, React__namespace.createElement(\"p\", {\n    style: Object.assign(Object.assign({}, paraGraphDefaultStyle), {\n      margin: 0,\n      padding: 0,\n      fontWeight: 400,\n      fontSize: 12\n    })\n  }, React__namespace.createElement(\"span\", {\n    style: {\n      transition: '0.5s all',\n      color: isValid ? colors.green : colors.lightPink\n    }\n  }, \"\\u25A0\"), ' ', \"React Hook Form\"), React__namespace.createElement(CircleButton, {\n    title: \"Close dev panel\",\n    onClick: () => setVisible(false)\n  }, \"\\u2715\"));\n};\n\nconst PanelTable = _ref4 => {\n  let {\n    refObject,\n    hasError,\n    isDirty,\n    fieldsValues,\n    isNative,\n    errorMessage,\n    errorType,\n    type,\n    isTouched,\n    name,\n    collapseAll\n  } = _ref4;\n  const [collapse, setCollapse] = React__namespace.useState(false);\n  React__namespace.useEffect(() => {\n    setCollapse(!collapseAll);\n  }, [collapseAll]);\n  let value = fieldsValues ? get(fieldsValues, name) : '';\n  let isValueWrappedInPre = false;\n\n  if (!isUndefined__default[\"default\"](value)) {\n    if (isObject__default[\"default\"](value)) {\n      try {\n        value = React__namespace.createElement(\"pre\", {\n          style: {\n            margin: 0\n          }\n        }, React__namespace.createElement(\"code\", {\n          style: {\n            fontSize: 12\n          }\n        }, JSON.stringify(value, null, 2)));\n        isValueWrappedInPre = true;\n      } catch (_a) {\n        value = React__namespace.createElement(\"span\", null, \"[Nested Object]\");\n      }\n    } else if (typeof value !== 'string') {\n      value = String(value);\n    }\n  }\n\n  return React__namespace.createElement(Table, {\n    style: {\n      padding: '5px 8px',\n      width: '100%',\n      transition: '.3s all',\n      borderLeft: `2px solid ${hasError ? colors.secondary : colors.buttonBlue}`,\n      background: 'none'\n    }\n  }, React__namespace.createElement(\"thead\", null, React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    valign: \"top\",\n    style: {\n      width: 85,\n      lineHeight: '22px'\n    }\n  }, React__namespace.createElement(Button, {\n    onClick: () => setCollapse(!collapse),\n    title: \"Toggle field table\",\n    style: {\n      border: `1px solid ${colors.lightBlue}`,\n      borderRadius: 2,\n      padding: '3px 5px',\n      display: 'inline-block',\n      fontSize: 9,\n      lineHeight: '13px',\n      width: 20,\n      textAlign: 'center',\n      marginRight: 8\n    }\n  }, collapse ? '+' : '-'), React__namespace.createElement(Button, {\n    onClick: () => {\n      if (refObject.scrollIntoView) {\n        refObject.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    },\n    title: \"Scroll into view\",\n    style: Object.assign({\n      border: `1px solid ${colors.lightBlue}`,\n      borderRadius: 2,\n      padding: '3px 5px',\n      display: 'inline-block',\n      fontSize: 9,\n      lineHeight: '13px',\n      textAlign: 'center',\n      width: 'calc(100% - 30px)'\n    }, isNative ? {} : {\n      cursor: 'not-allowed',\n      background: colors.lightBlue\n    })\n  }, isNative ? 'Native' : 'Custom')), React__namespace.createElement(\"td\", {\n    style: {\n      display: 'block',\n      maxWidth: 140\n    }\n  }, React__namespace.createElement(\"p\", {\n    style: Object.assign(Object.assign({\n      margin: 0,\n      padding: 0,\n      top: 0,\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }, paraGraphDefaultStyle), {\n      lineHeight: '24px'\n    }),\n    title: name\n  }, name)))), !collapse && React__namespace.createElement(\"tbody\", null, type && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Type:\"), React__namespace.createElement(\"td\", {\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, type)), errorType && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"ERROR Type:\"), React__namespace.createElement(\"td\", {\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, errorType)), errorMessage && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"MESSAGE:\"), React__namespace.createElement(\"td\", {\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, typeof errorMessage === 'string' ? errorMessage.trim() : JSON.stringify(errorMessage))), !isUndefined__default[\"default\"](value) && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Value:\"), React__namespace.createElement(\"td\", {\n    \"data-testid\": `${name}-field-value`,\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, !isValueWrappedInPre && React__namespace.createElement(\"p\", {\n    title: value,\n    style: Object.assign(Object.assign({}, paraGraphDefaultStyle), {\n      margin: 0,\n      padding: 0\n    })\n  }, value), isValueWrappedInPre && React__namespace.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, paraGraphDefaultStyle), {\n      margin: 0,\n      padding: 0\n    })\n  }, value))), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Touched:\"), React__namespace.createElement(\"td\", null, React__namespace.createElement(\"code\", {\n    style: Object.assign(Object.assign({\n      color: isTouched ? colors.green : colors.lightPink\n    }, paraGraphDefaultStyle), {\n      fontSize: 12\n    })\n  }, isTouched ? 'true' : 'false'))), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Dirty:\"), React__namespace.createElement(\"td\", null, React__namespace.createElement(\"code\", {\n    style: Object.assign(Object.assign({\n      color: isDirty ? colors.green : colors.lightPink\n    }, paraGraphDefaultStyle), {\n      fontSize: 12\n    })\n  }, isDirty ? 'true' : 'false')))));\n};\n\nconst FormStateTable = _ref5 => {\n  let {\n    formState,\n    showFormState,\n    setShowFormState\n  } = _ref5;\n  return React__namespace.createElement(\"div\", {\n    style: {\n      alignSelf: 'end'\n    }\n  }, React__namespace.createElement(reactSimpleAnimate.Animate, {\n    play: showFormState,\n    start: {\n      opacity: 0\n    },\n    end: {\n      opacity: 1\n    },\n    render: _ref6 => {\n      let {\n        style\n      } = _ref6;\n      return React__namespace.createElement(\"table\", {\n        style: Object.assign({\n          padding: '5px 10px',\n          display: 'block',\n          background: 'black',\n          borderTop: `1px solid ${colors.lightPink}`,\n          pointerEvents: 'none'\n        }, style)\n      }, React__namespace.createElement(\"tbody\", null, React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({\n          width: 90\n        }, paraGraphDefaultStyle)\n      }, \"Valid:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isValid ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isValid ? 'true' : 'false')), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Dirty:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isDirty ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isDirty ? 'true' : 'false')), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Submitted:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isSubmitted ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isSubmitted ? 'true' : 'false')), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Count:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.submitCount ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.submitCount)), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Submitting:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isSubmitting ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isSubmitting ? 'true' : 'false'))));\n    }\n  }), React__namespace.createElement(Button, {\n    style: {\n      margin: 0,\n      width: '100%',\n      padding: '8px 10px',\n      textTransform: 'none',\n      fontSize: 12,\n      lineHeight: '14px',\n      cursor: 'pointer'\n    },\n    title: \"Toggle form state panel\",\n    onClick: () => {\n      setShowFormState(!showFormState);\n    }\n  }, React__namespace.createElement(\"span\", {\n    style: {\n      transition: '0.5s all',\n      color: formState.isValid ? colors.green : colors.lightPink\n    }\n  }, \"\\u25A0\"), ' ', \"Form State: \", showFormState ? 'OFF' : 'ON'));\n};\n\nfunction setVisible(state, payload) {\n  return Object.assign(Object.assign({}, state), {\n    visible: payload\n  });\n}\n\nfunction setCollapse(state, payload) {\n  return Object.assign(Object.assign({}, state), {\n    isCollapse: payload\n  });\n}\n\nlet childIndex = 0;\n\nfunction PanelChildren(_ref7) {\n  let {\n    fields,\n    searchTerm,\n    touchedFields,\n    errors,\n    dirtyFields,\n    state,\n    fieldsValues\n  } = _ref7;\n  return React__namespace.createElement(React__namespace.Fragment, null, fields && Object.entries(fields).filter(_ref8 => {\n    let [name] = _ref8;\n    return (name && name.toLowerCase && name.toLowerCase().includes(searchTerm) || !name && !searchTerm || searchTerm === '') && name;\n  }).map((_ref9, index) => {\n    let [name, value] = _ref9;\n    childIndex++;\n\n    if (!(value === null || value === void 0 ? void 0 : value._f)) {\n      return React__namespace.createElement(PanelChildren, Object.assign({\n        key: name + childIndex\n      }, {\n        fields: value,\n        searchTerm,\n        touchedFields,\n        errors,\n        dirtyFields,\n        state,\n        fieldsValues\n      }));\n    } else {\n      const error = get(errors, value._f.name);\n      const errorMessage = get(error, 'message', undefined);\n      const errorType = get(error, 'type', undefined);\n      const type = get(value, 'ref.type', undefined);\n      const isTouched = !!get(touchedFields, value._f.name);\n      const isNative = !!(value && value._f.ref.type);\n      const isDirty = !!get(dirtyFields, value._f.name);\n      const hasError = !!error;\n      const ref = get(value, '_f.ref');\n      return React__namespace.createElement(\"section\", {\n        key: (value === null || value === void 0 ? void 0 : value._f.name) + childIndex,\n        style: {\n          borderBottom: `1px dashed ${colors.secondary}`,\n          margin: 0\n        }\n      }, React__namespace.createElement(PanelTable, {\n        refObject: ref,\n        index: index,\n        collapseAll: state.isCollapse,\n        name: value === null || value === void 0 ? void 0 : value._f.name,\n        isTouched: isTouched,\n        type: type,\n        hasError: hasError,\n        isNative: isNative,\n        errorMessage: errorMessage,\n        errorType: errorType,\n        isDirty: isDirty,\n        fieldsValues: fieldsValues\n      }));\n    }\n  }));\n}\n\nconst Panel = _ref10 => {\n  let {\n    control,\n    control: {\n      _fields\n    }\n  } = _ref10;\n  const formState = useFormState({\n    control\n  });\n  const {\n    dirtyFields,\n    touchedFields,\n    errors\n  } = formState;\n  formState.isDirty;\n  const {\n    state,\n    actions\n  } = littleStateMachine.useStateMachine({\n    setCollapse\n  });\n  const [, setData] = React__namespace.useState({});\n  const [showFormState, setShowFormState] = React__namespace.useState(false);\n  const fieldsValues = useWatch({\n    control\n  });\n  const {\n    register,\n    watch\n  } = useForm();\n  const searchTerm = watch('search', '');\n  React.useEffect(() => {\n    setData({});\n  }, []);\n  return React__namespace.createElement(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateRows: '56px auto',\n      height: 'calc(100vh - 40px)'\n    }\n  }, React__namespace.createElement(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: `1fr 1fr`,\n      gridTemplateRows: '28px 28px'\n    }\n  }, React__namespace.createElement(Button, {\n    style: {\n      borderRight: `1px solid ${colors.primary}`,\n      textTransform: 'none',\n      fontSize: 11,\n      lineHeight: 1\n    },\n    title: \"Update values and state the form\",\n    onClick: () => setData({})\n  }, \"\\u267A REFRESH\"), React__namespace.createElement(Button, {\n    style: {\n      borderRight: `1px solid ${colors.primary}`,\n      textTransform: 'none',\n      fontSize: 11,\n      lineHeight: 1\n    },\n    title: \"Toggle entire fields\",\n    onClick: () => {\n      actions.setCollapse(!state.isCollapse);\n    }\n  }, state.isCollapse ? '[-] COLLAPSE' : '[+] EXPAND'), React__namespace.createElement(Input, Object.assign({\n    style: {\n      display: 'inline-block',\n      borderRadius: 0,\n      width: '100%',\n      margin: 0,\n      padding: '5px 10px',\n      WebkitAppearance: 'none',\n      appearance: 'none',\n      fontSize: 14,\n      border: 0,\n      color: 'white',\n      gridColumnStart: 1,\n      gridColumnEnd: 4,\n      background: 'black'\n    }\n  }, register('search'), {\n    placeholder: \"Filter name...\",\n    type: \"search\"\n  }))), React__namespace.createElement(\"div\", {\n    style: {\n      overflow: 'auto'\n    }\n  }, React__namespace.createElement(PanelChildren, {\n    fields: _fields,\n    searchTerm: searchTerm,\n    errors: errors,\n    touchedFields: touchedFields,\n    dirtyFields: dirtyFields,\n    fieldsValues: fieldsValues,\n    state: state\n  })), React__namespace.createElement(FormStateTable, {\n    formState: formState,\n    showFormState: showFormState,\n    setShowFormState: setShowFormState\n  }));\n};\n\nconst Logo = _ref11 => {\n  let {\n    style,\n    actions\n  } = _ref11;\n  return React__namespace.createElement(\"svg\", {\n    fill: \"white\",\n    viewBox: \"0 0 100 100\",\n    style: Object.assign({\n      height: 14,\n      padding: 3,\n      borderRadius: 2,\n      background: colors.lightPink\n    }, style),\n    onClick: () => {\n      actions.setVisible(true);\n    },\n    \"aria-label\": \"React Hook Form Logo\"\n  }, React__namespace.createElement(\"path\", {\n    d: \"M73.56,13.32H58.14a8.54,8.54,0,0,0-16.27,0H26.44a11,11,0,0,0-11,11V81.63a11,11,0,0,0,11,11H73.56a11,11,0,0,0,11-11V24.32A11,11,0,0,0,73.56,13.32Zm-30.92,2a1,1,0,0,0,1-.79,6.54,6.54,0,0,1,12.78,0,1,1,0,0,0,1,.79h5.38v6.55a3,3,0,0,1-3,3H40.25a3,3,0,0,1-3-3V15.32ZM82.56,81.63a9,9,0,0,1-9,9H26.44a9,9,0,0,1-9-9V24.32a9,9,0,0,1,9-9h8.81v6.55a5,5,0,0,0,5,5h19.5a5,5,0,0,0,5-5V15.32h8.81a9,9,0,0,1,9,9Z\"\n  }), React__namespace.createElement(\"path\", {\n    style: {\n      transform: 'translateX(-25px)'\n    },\n    d: \"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n  }), React__namespace.createElement(\"path\", {\n    d: \"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n  }), React__namespace.createElement(\"path\", {\n    style: {\n      transform: 'translateX(-25px)'\n    },\n    d: \"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n  }), React__namespace.createElement(\"path\", {\n    d: \"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n  }));\n};\n\nfunction getPositionByPlacement(placement) {\n  let defaultX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let defaultY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const [x, y] = placement.split('-');\n  return {\n    [x]: defaultX,\n    [y]: defaultY\n  };\n}\n\nconst DevToolUI = _ref12 => {\n  let {\n    control,\n    placement = 'top-right',\n    styles\n  } = _ref12;\n  const {\n    state,\n    actions\n  } = littleStateMachine.useStateMachine({\n    setVisible\n  });\n  const position = getPositionByPlacement(placement, 0, 0);\n  return React__namespace.createElement(React__namespace.Fragment, null, React__namespace.createElement(reactSimpleAnimate.Animate, {\n    play: state.visible,\n    duration: 0.2,\n    start: Object.assign(Object.assign({}, position), {\n      position: 'fixed',\n      transform: placement.includes('right') ? 'translateX(280px)' : 'translateX(-280px)',\n      zIndex: 99999\n    }),\n    end: Object.assign(Object.assign({}, position), {\n      position: 'fixed',\n      transform: 'translateX(0)',\n      zIndex: 99999\n    })\n  }, React__namespace.createElement(\"div\", {\n    style: Object.assign(Object.assign(Object.assign({}, position), {\n      position: 'fixed',\n      height: '100vh',\n      width: 250,\n      zIndex: 99999,\n      background: colors.buttonBlue,\n      display: 'grid',\n      textAlign: 'left',\n      color: 'white',\n      fontSize: 14,\n      gridTemplateRows: '40px auto',\n      fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\n    }), styles === null || styles === void 0 ? void 0 : styles.panel)\n  }, React__namespace.createElement(Header, {\n    setVisible: actions.setVisible,\n    control: control\n  }), React__namespace.createElement(Panel, {\n    control: control\n  }))), !state.visible && React__namespace.createElement(Button, {\n    title: \"Show dev panel\",\n    hideBackground: true,\n    style: Object.assign(Object.assign(Object.assign({\n      position: 'fixed',\n      zIndex: 99999\n    }, getPositionByPlacement(placement, 3, 3)), {\n      padding: 3,\n      margin: 0,\n      background: 'none'\n    }), styles === null || styles === void 0 ? void 0 : styles.button)\n  }, React__namespace.createElement(Logo, {\n    actions: actions\n  })));\n};\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction proxyToObject(proxy) {\n  return Reflect.ownKeys(proxy).reduce((prev, key) => {\n    prev[key] = proxy[key];\n    return prev;\n  }, {});\n}\n\nfunction nestToFlat(flatKeys, obj, defaultValue) {\n  return flatKeys.reduce((prev, name) => {\n    // nested field may be `undefined`\n    prev[name] = get__default[\"default\"](obj, name) || defaultValue;\n    return prev;\n  }, {});\n}\n\nfunction useExportControlToExtension(_ref13) {\n  let {\n    id,\n    control\n  } = _ref13;\n  const nestedFormValues = useWatch({\n    control\n  });\n  const formState = useFormState({\n    control\n  });\n  const [isExtensionEnabled, setIsExtensionEnabled] = React.useState(false);\n\n  const handleInitMessage = message => {\n    if (message.data.source !== 'react-hook-form-bridge' || message.data.type !== 'INIT') {\n      return;\n    }\n\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'WELCOME'\n    });\n    setIsExtensionEnabled(true);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('message', handleInitMessage);\n    return () => window.removeEventListener('message', handleInitMessage);\n  }, []);\n  useDeepCompareEffect__default[\"default\"](() => {\n    if (!isExtensionEnabled) {\n      return;\n    }\n\n    const _a = proxyToObject(formState),\n          {\n      errors: nestedErrors,\n      dirtyFields: nestedDirtyFields,\n      touchedFields: nestedTouchedFields\n    } = _a,\n          formStatus = __rest(_a, [\"errors\", \"dirtyFields\", \"touchedFields\"]);\n\n    const flatFieldNames = [...control._names.mount];\n    const formValues = nestToFlat(flatFieldNames, nestedFormValues, '');\n    const dirtyFields = nestToFlat(flatFieldNames, nestedDirtyFields, false);\n    const touchedFields = nestToFlat(flatFieldNames, nestedTouchedFields, false);\n    const flatErrors = nestToFlat(flatFieldNames, nestedErrors);\n    const errors = Object.entries(flatErrors).reduce((prev, _ref14) => {\n      let [key, value] = _ref14;\n      prev[key] = {\n        type: value === null || value === void 0 ? void 0 : value.type,\n        message: value === null || value === void 0 ? void 0 : value.message\n      };\n      return prev;\n    }, {});\n    const nativeFields = flatFieldNames.reduce((prev, name) => {\n      var _a, _b, _c;\n\n      prev[name] = !!((_c = (_b = (_a = get__default[\"default\"](control._fields, name)) === null || _a === void 0 ? void 0 : _a._f) === null || _b === void 0 ? void 0 : _b.ref) === null || _c === void 0 ? void 0 : _c.type);\n      return prev;\n    }, {});\n    const updateMessagePayload = {\n      id,\n      data: {\n        formValues,\n        formState: Object.assign({\n          errors,\n          dirtyFields,\n          touchedFields,\n          nativeFields\n        }, formStatus)\n      }\n    };\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'UPDATE',\n      payload: updateMessagePayload\n    });\n  }, [isExtensionEnabled, nestedFormValues, proxyToObject(formState)]);\n  return {\n    isExtensionEnabled\n  };\n}\n\nif (typeof window !== 'undefined') {\n  littleStateMachine.createStore({\n    visible: false,\n    isCollapse: false,\n    filterName: ''\n  }, {\n    name: '__REACT_HOOK_FORM_DEVTOOLS__',\n    middleWares: [],\n    storageType: window.localStorage\n  });\n}\n\nconst DevTool = props => {\n  var _a, _b, _c;\n\n  const methods = useFormContext();\n  const uuid$1 = React__namespace.useRef('');\n  React__namespace.useEffect(() => {\n    uuid$1.current = uuid.v4();\n  }, []);\n  const {\n    isExtensionEnabled\n  } = useExportControlToExtension({\n    id: (_a = props === null || props === void 0 ? void 0 : props.id) !== null && _a !== void 0 ? _a : uuid$1.current,\n    control: (_b = props === null || props === void 0 ? void 0 : props.control) !== null && _b !== void 0 ? _b : methods.control\n  });\n\n  if (isExtensionEnabled) {\n    return null;\n  }\n\n  return React__namespace.createElement(littleStateMachine.StateMachineProvider, null, React__namespace.createElement(DevToolUI, {\n    control: (_c = props === null || props === void 0 ? void 0 : props.control) !== null && _c !== void 0 ? _c : methods.control,\n    placement: props === null || props === void 0 ? void 0 : props.placement,\n    styles: props === null || props === void 0 ? void 0 : props.styles\n  }));\n};\n\nexports.DevTool = DevTool;","map":{"version":3,"mappings":"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","names":["element","type","value","Date","isObjectType","isNullOrUndefined","Array","isArray","isDateObject","getEventValue","event","isObject","target","isCheckBoxInput","checked","name","substring","search","names","has","getNodeParentName","isPlainObject","tempObject","prototypeCopy","constructor","prototype","hasOwnProperty","isWeb","window","HTMLElement","document","data","copy","Set","Blob","FileList","key","cloneObject","filter","Boolean","val","undefined","obj","path","defaultValue","result","compact","split","reduce","isUndefined","EVENTS","BLUR","FOCUS_OUT","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","HookFormContext","React","createContext","useFormContext","useContext","getProxyFormState","formState","control","localProxyFormState","isRoot","defaultValues","_defaultValues","Object","defineProperty","get","_key","_proxyFormState","keys","length","shouldRenderFormState","formStateData","updateFormState","isEmptyObject","find","shouldSubscribeByName","signalName","exact","convertToArrayPayload","some","currentName","startsWith","useSubscribe","props","_props","useRef","current","useEffect","subscription","disabled","subject","subscribe","next","unsubscribe","useFormState","methods","useState","_formState","_mounted","_localProxyFormState","isDirty","isLoading","dirtyFields","touchedFields","isValidating","isValid","errors","_name","_updateFormState","_subjects","state","_getDirty","_updateValid","generateWatchOutput","_names","formValues","isGlobal","isString","watch","add","map","fieldName","watchAll","useWatch","values","updateValue","_formValues","_getWatch","_removeUnmounted","isKey","test","input","replace","object","index","tempPath","stringToPath","lastIndex","newValue","objValue","isNaN","appendErrors","validateAllFieldCriteria","message","types","focusFieldBy","fields","callback","fieldsNames","field","_f","currentField","ref","focus","refs","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isWatched","isBlurEvent","watchName","slice","error","fieldArrayErrors","set","isHTMLElement","owner","ownerDocument","defaultView","RegExp","defaultResult","validResult","getCheckboxValue","options","option","attributes","defaultReturn","getRadioValue","previous","getValidateError","isMessage","every","isBoolean","validationData","isRegex","validateField","shouldUseNativeValidation","isFieldArray","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","reportValidity","isRadio","isRadioInput","isCheckBox","isRadioOrCheckbox","isEmpty","isFileInput","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","exceedMin","maxOutput","minOutput","valueNumber","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","maxLengthOutput","minLengthOutput","patternValue","match","isFunction","validateError","validationResult","baseGet","updatePath","isEmptyArray","unset","paths","childObject","createSubject","_observers","observer","push","o","observers","deepEqual","object1","object2","isPrimitive","getTime","keys1","keys2","val1","includes","val2","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","setValueAs","NaN","files","selectedOptions","getFieldValueAs","getResolverOptions","_fields","criteriaMode","rule","source","join","foundError","pop","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","defaultOptions","shouldFocusError","flushRootRender","_options","submitCount","isSubmitting","isSubmitSuccessful","shouldUnregister","_state","action","unMount","array","delayErrorCallback","timer","shouldCaptureDirtyFields","resetOptions","keepDirtyValues","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","wait","clearTimeout","setTimeout","shouldUpdateValid","resolver","_executeSchema","executeBuiltInValidation","_updateIsValidating","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","fieldValues","argA","argB","getDirtyFields","updateErrors","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","getFieldValue","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","delayError","updatedFormState","context","executeSchemaAndUpdateState","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","updateFieldArrayRootError","unregister","getValues","_getFieldArray","fieldReference","forEach","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","getCurrentFieldValue","shouldSkipValidation","hasValidation","deps","watched","previousErrorLookupResult","schemaErrorLookup","errorLookupResult","fieldNames","Promise","shouldFocus","getFieldState","invalid","clearErrors","inputName","setError","payload","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","register","disabledIsDefined","getRuleValue","fieldRef","querySelectorAll","radioOrCheckbox","isNameInFieldArray","_focusError","handleSubmit","onValid","onInvalid","e","preventDefault","persist","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","shouldSelect","select","then","_formControl","createFormControl","primary","secondary","lightBlue","blue","lightPink","errorPink","buttonBlue","link","green","paraGraphDefaultStyle","fontSize","lineHeight","Button","styled","button","hideBackground","colors","defaultProps","CircleButton","Input","Table","table","Header","setVisible","style","display","alignItems","paddingLeft","backgroundColor","margin","padding","fontWeight","transition","color","title","onClick","PanelTable","refObject","hasError","fieldsValues","isNative","errorMessage","errorType","collapseAll","collapse","setCollapse","isValueWrappedInPre","JSON","stringify","_a","String","width","borderLeft","background","valign","border","borderRadius","textAlign","marginRight","scrollIntoView","behavior","cursor","maxWidth","top","position","whiteSpace","overflow","textOverflow","align","paddingRight","verticalAlign","trim","FormStateTable","showFormState","setShowFormState","alignSelf","Animate","play","start","opacity","end","render","borderTop","pointerEvents","textTransform","visible","isCollapse","childIndex","PanelChildren","searchTerm","entries","toLowerCase","borderBottom","Panel","actions","useStateMachine","setData","useForm","gridTemplateRows","height","gridTemplateColumns","borderRight","WebkitAppearance","appearance","gridColumnStart","gridColumnEnd","placeholder","Logo","fill","viewBox","d","transform","getPositionByPlacement","placement","defaultX","defaultY","x","y","DevToolUI","styles","duration","zIndex","fontFamily","panel","proxyToObject","proxy","Reflect","ownKeys","prev","nestToFlat","flatKeys","useExportControlToExtension","id","nestedFormValues","isExtensionEnabled","setIsExtensionEnabled","handleInitMessage","postMessage","addEventListener","removeEventListener","useDeepCompareEffect","nestedErrors","nestedDirtyFields","nestedTouchedFields","formStatus","flatFieldNames","flatErrors","nativeFields","_b","_c","updateMessagePayload","createStore","filterName","middleWares","storageType","localStorage","uuid","generateUUID","StateMachineProvider"],"sources":["D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isCheckBoxInput.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isDateObject.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isNullOrUndefined.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isObject.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getEventValue.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getNodeParentName.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\isNameInFieldArray.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isPlainObject.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isWeb.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\cloneObject.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\compact.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isUndefined.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\get.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\constants.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\useFormContext.tsx","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getProxyFormState.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isEmptyObject.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\shouldRenderFormState.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\convertToArrayPayload.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\shouldSubscribeByName.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\useSubscribe.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\useFormState.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isString.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\generateWatchOutput.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\useWatch.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isKey.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\stringToPath.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\set.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\appendErrors.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\focusFieldBy.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getValidationModes.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\isWatched.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\updateFieldArrayRootError.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isBoolean.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isFileInput.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isFunction.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isHTMLElement.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isMessage.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isRadioInput.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isRegex.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getCheckboxValue.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getRadioValue.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getValidateError.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getValueAndMessage.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\validateField.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\unset.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\createSubject.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isPrimitive.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\deepEqual.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isMultipleSelect.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\isRadioOrCheckbox.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\live.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\utils\\objectHasFunction.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getDirtyFields.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getFieldValueAs.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getFieldValue.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getResolverOptions.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\getRuleValue.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\hasValidation.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\schemaErrorLookup.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\skipValidation.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\unsetEmptyArray.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\logic\\createFormControl.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\node_modules\\react-hook-form\\src\\useForm.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\colors.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\styled.tsx","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\header.tsx","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\panelTable.tsx","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\formStateTable.tsx","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\settingAction.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\panel.tsx","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\logo.tsx","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\position.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\devToolUI.tsx","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\extension\\utils.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\extension\\useExportControlToExtension.ts","D:\\practice\\react\\sabzlearn2\\React326-import-db-and-run-server\\frontend\\node_modules\\@hookform\\devtools\\src\\devTool.tsx"],"sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!Array.isArray(data) && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        copy[key] = cloneObject(data[key]);\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path?: string, defaultValue?: unknown): any => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path as keyof T])\n      ? defaultValue\n      : obj[path as keyof T]\n    : result;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <TFieldValues extends FieldValues, TContext = any>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues, TContext = any>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues, TContext>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport {\n  Control,\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  ReadFormState,\n} from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends FieldValues, K extends ReadFormState>(\n  formStateData: Partial<FormState<T>> & { name?: InternalFieldName },\n  _proxyFormState: K,\n  updateFormState: Control<T>['_updateFormState'],\n  isRoot?: boolean,\n) => {\n  updateFormState(formStateData);\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  exact && signalName\n    ? name === signalName\n    : !name ||\n      !signalName ||\n      name === signalName ||\n      convertToArrayPayload(name).some(\n        (currentName) =>\n          currentName &&\n          (currentName.startsWith(signalName) ||\n            signalName.startsWith(currentName)),\n      );\n","import React from 'react';\n\nimport { Subject } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  next: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const subscription =\n      !props.disabled &&\n      _props.current.subject &&\n      _props.current.subject.subscribe({\n        next: _props.current.next,\n      });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _mounted = React.useRef(true);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    isLoading: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    next: (\n      value: Partial<FormState<TFieldValues>> & { name?: InternalFieldName },\n    ) =>\n      _mounted.current &&\n      shouldSubscribeByName(\n        _name.current as InternalFieldName,\n        value.name,\n        exact,\n      ) &&\n      shouldRenderFormState(\n        value,\n        _localProxyFormState.current,\n        control._updateFormState,\n      ) &&\n      updateFormState({\n        ...control._formState,\n        ...value,\n      }),\n    subject: control._subjects.state,\n  });\n\n  React.useEffect(() => {\n    _mounted.current = true;\n    const isDirty = control._proxyFormState.isDirty && control._getDirty();\n\n    if (isDirty !== control._formState.isDirty) {\n      control._subjects.state.next({\n        isDirty,\n      });\n    }\n\n    _localProxyFormState.current.isValid && control._updateValid(true);\n\n    return () => {\n      _mounted.current = false;\n    };\n  }, [control]);\n\n  return getProxyFormState(\n    formState,\n    control,\n    _localProxyFormState.current,\n    false,\n  );\n}\n\nexport { useFormState };\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { DeepPartial, FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default <T>(\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n  defaultValue?: DeepPartial<T> | unknown,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n\n  return formValues;\n};\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport cloneObject from './utils/cloneObject';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues extends FieldValues>(\n  props?: UseWatchProps<TFieldValues>,\n) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.values,\n    next: (formState: { name?: InternalFieldName; values?: FieldValues }) => {\n      if (\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          formState.name,\n          exact,\n        )\n      ) {\n        updateValue(\n          cloneObject(\n            generateWatchOutput(\n              _name.current as InternalFieldName | InternalFieldName[],\n              control._names,\n              formState.values || control._formValues,\n              false,\n              defaultValue,\n            ),\n          ),\n        );\n      }\n    },\n  });\n\n  const [value, updateValue] = React.useState(\n    control._getWatch(\n      name as InternalFieldName,\n      defaultValue as DeepPartialSkipArrayKey<TFieldValues>,\n    ),\n  );\n\n  React.useEffect(() => control._removeUnmounted());\n\n  return value;\n}\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name?: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus) {\n          _f.ref.focus();\n          break;\n        } else if (_f.refs && _f.refs[0].focus) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport compact from '../utils/compact';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isWeb from './isWeb';\n\nexport default (value: unknown): value is HTMLElement => {\n  if (!isWeb) {\n    return false;\n  }\n\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  return (\n    value instanceof\n    (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement)\n  );\n};\n","import { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message => isString(value);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  FieldValues,\n  InternalFieldErrors,\n  Message,\n  NativeFieldValue,\n} from '../types';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends FieldValues>(\n  field: Field,\n  formValues: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  const inputValue: NativeFieldValue = get(formValues, name);\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) &&\n      isUndefined(ref.value) &&\n      isUndefined(inputValue)) ||\n    (isHTMLElement(ref) && ref.value === '') ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n          ? inputValue > maxOutput.value\n          : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n          ? inputValue < minOutput.value\n          : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue, formValues),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (!isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string | (string | number)[]) {\n  const paths = Array.isArray(path)\n    ? path\n    : isKey(path)\n    ? [path]\n    : stringToPath(path);\n\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n\n  const index = paths.length - 1;\n  const key = paths[index];\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  if (\n    index !== 0 &&\n    ((isObject(childObject) && isEmptyObject(childObject)) ||\n      (Array.isArray(childObject) && isEmptyArray(childObject)))\n  ) {\n    unset(object, paths.slice(0, -1));\n  }\n\n  return object;\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<U>(data: U, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: any,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : value\n      ? +value\n      : value\n    : valueAsDate && isString(value)\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n    ? rule.source\n    : isObject(rule)\n    ? isRegex(rule.value)\n      ? rule.value.source\n      : rule.value\n    : rule;\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  Ref,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport getValidationModes from './getValidationModes';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n  flushRootRender: () => void,\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: true,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {},\n  };\n  let _fields = {};\n  let _defaultValues =\n    isObject(_options.defaultValues) || isObject(_options.values)\n      ? cloneObject(_options.defaultValues || _options.values) || {}\n      : {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  };\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    values: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n  const shouldCaptureDirtyFields =\n    props.resetOptions && props.resetOptions.keepDirtyValues;\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = setTimeout(callback, wait);\n    };\n\n  const _updateValid = async (shouldUpdateValid?: boolean) => {\n    if (_proxyFormState.isValid || shouldUpdateValid) {\n      const isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = (value: boolean) =>\n    _proxyFormState.isValidating &&\n    _subjects.state.next({\n      isValidating: value,\n    });\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _state.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n\n    if (!isBlurEvent || shouldDirty) {\n      if (_proxyFormState.isDirty) {\n        isPreviousDirty = _formState.isDirty;\n        _formState.isDirty = output.isDirty = _getDirty();\n        shouldUpdateField = isPreviousDirty !== output.isDirty;\n      }\n\n      const isCurrentFieldPristine = deepEqual(\n        get(_defaultValues, name),\n        fieldValue,\n      );\n\n      isPreviousDirty = get(_formState.dirtyFields, name);\n      isCurrentFieldPristine\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      shouldUpdateField =\n        shouldUpdateField ||\n        (_proxyFormState.dirtyFields &&\n          isPreviousDirty !== !isCurrentFieldPristine);\n    }\n\n    if (isBlurEvent) {\n      const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          (_proxyFormState.touchedFields &&\n            isPreviousFieldTouched !== isBlurEvent);\n      }\n    }\n\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    _updateIsValidating(false);\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    _options.resolver!(\n      _formValues as TFieldValues,\n      _options.context,\n      getResolverOptions(\n        name || _names.mount,\n        _fields,\n        _options.criteriaMode,\n        _options.shouldUseNativeValidation,\n      ),\n    );\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context: {\n      valid: boolean;\n    } = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const fieldError = await validateField(\n            field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n            isFieldArrayRoot,\n          );\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        fieldValue &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_state.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n          ? _defaultValues\n          : isString(names)\n          ? { [names]: defaultValue }\n          : defaultValue),\n      },\n      isGlobal,\n      defaultValue,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _state.mount ? _formValues : _defaultValues,\n        name,\n        props.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.values.next({\n              name,\n              values: { ..._formValues },\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: { ..._formValues },\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({ ..._formState });\n    _subjects.values.next({\n      name,\n      values: { ..._formValues },\n    });\n    !_state.mount && flushRootRender();\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n    const getCurrentFieldValue = () =>\n      target.type ? getFieldValue(field._f) : getEventValue(event);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.values.next({\n          name,\n          type: event.type,\n          values: { ..._formValues },\n        });\n\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n\n      _updateIsValidating(true);\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        if (error) {\n          isValid = false;\n        } else if (_proxyFormState.isValid) {\n          isValid = await executeBuiltInValidation(_fields, true);\n        }\n      }\n\n      field._f.deps &&\n        trigger(\n          field._f.deps as FieldPath<TFieldValues> | FieldPath<TFieldValues>[],\n        );\n      shouldRenderByError(name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _updateIsValidating(true);\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => key && get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_state.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames)\n      : fieldNames.map((name) => get(values, name));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name &&\n      convertToArrayPayload(name).forEach((inputName) =>\n        unset(_formState.errors, inputName),\n      );\n\n    _subjects.state.next({\n      errors: name ? _formState.errors : {},\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: DeepPartial<TFieldValues>,\n  ) =>\n    isFunction(name)\n      ? _subjects.values.subscribe({\n          next: (payload) =>\n            name(\n              _getWatch(undefined, defaultValue),\n              payload as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.values.next({\n      values: { ..._formValues },\n    });\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    field\n      ? disabledIsDefined &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true, options.value);\n\n    return {\n      ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n      ...(_options.shouldUseNativeValidation\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _state.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    focusFieldBy(\n      _fields,\n      (key) => key && get(_formState.errors, key),\n      _names.mount,\n    );\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let fieldValues = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      if (_options.resolver) {\n        const { errors, values } = await _executeSchema();\n        _formState.errors = errors;\n        fieldValues = values;\n      } else {\n        await executeBuiltInValidation(_fields);\n      }\n\n      unset(_formState.errors, 'root');\n\n      if (isEmptyObject(_formState.errors)) {\n        _subjects.state.next({\n          errors: {},\n        });\n        await onValid(fieldValues as TFieldValues, e);\n      } else {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors }, e);\n        }\n        _focusError();\n        setTimeout(_focusError);\n      }\n\n      _subjects.state.next({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(_formState.errors),\n        submitCount: _formState.submitCount + 1,\n        errors: _formState.errors,\n      });\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, get(_defaultValues, name))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values =\n      formValues && !isEmptyObject(formValues)\n        ? cloneUpdatedValues\n        : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n\n      _subjects.array.next({\n        values: { ...values },\n      });\n\n      _subjects.values.next({\n        values: { ...values },\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    !_state.mount && flushRootRender();\n\n    _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n\n    _state.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: keepStateOptions.keepDirty\n        ? _formState.isDirty\n        : !!(\n            keepStateOptions.keepDefaultValues &&\n            !deepEqual(formValues, _defaultValues)\n          ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: keepStateOptions.keepDirtyValues\n        ? _formState.dirtyFields\n        : keepStateOptions.keepDefaultValues && formValues\n        ? getDirtyFields(_defaultValues, formValues)\n        : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? formValues(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n\n  const _updateFormState = (\n    updatedFormState: Partial<FormState<TFieldValues>>,\n  ) => {\n    _formState = {\n      ..._formState,\n      ...updatedFormState,\n    };\n  };\n\n  if (isFunction(_options.defaultValues)) {\n    _options.defaultValues().then((values) => {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false,\n      });\n    });\n  }\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _reset,\n      _updateFormState,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport deepEqual from './utils/deepEqual';\nimport isFunction from './utils/isFunction';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isLoading: true,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: isFunction(props.defaultValues)\n      ? undefined\n      : props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props, () =>\n        updateFormState((formState) => ({ ...formState })),\n      ),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    next: (\n      value: Partial<FormState<TFieldValues>> & { name?: InternalFieldName },\n    ) => {\n      if (\n        shouldRenderFormState(\n          value,\n          control._proxyFormState,\n          control._updateFormState,\n          true,\n        )\n      ) {\n        updateFormState({ ...control._formState });\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    if (props.values && !deepEqual(props.values, control._defaultValues)) {\n      control._reset(props.values, control._options.resetOptions);\n    }\n  }, [props.values, control]);\n\n  React.useEffect(() => {\n    if (!control._state.mount) {\n      control._updateValid();\n      control._state.mount = true;\n    }\n\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next({ ...control._formState });\n    }\n\n    control._removeUnmounted();\n  });\n\n  _formControl.current.formState = getProxyFormState(formState, control);\n\n  return _formControl.current;\n}\n","export default {\n  primary: '#0e101c',\n  secondary: '#bf1650',\n  lightBlue: '#516391',\n  blue: '#1e2a4a',\n  lightPink: '#ec5990',\n  errorPink: '#fbecf2',\n  buttonBlue: '#191d3a',\n  link: '#ff7aa8',\n  green: '#1bda2b',\n};\n","import styled from '@emotion/styled';\n\nimport colors from './colors';\n\nexport const paraGraphDefaultStyle = {\n  fontSize: 13,\n  lineHeight: '20px',\n};\n\nconst Button = styled.button<{ hideBackground?: boolean }>`\n  appearance: none;\n  margin: 0;\n  border: 0;\n  color: white;\n  padding: 5px !important;\n  border-radius: 0 !important;\n  background: ${(props: { hideBackground?: boolean }) =>\n    props.hideBackground ? `` : `${colors.blue} !important`};\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n`;\n\nButton.defaultProps = { type: 'button' };\n\nconst CircleButton = styled(Button)`\n  font-size: 14px;\n  font-weight: bold;\n  margin: 0 4px 0 auto;\n  background: none !important;\n  display: flex;\n  width: 25px;\n  height: 25px;\n  justify-content: center;\n  line-height: 14px !important;\n  border-radius: 50% !important;\n  padding: 0 !important;\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n\n  &:active {\n    background: black;\n  }\n`;\n\nconst Input = styled.input`\n  &::placeholder {\n    color: #b3b3b3;\n  }\n\n  &:focus::placeholder {\n    color: white;\n  }\n`;\n\nconst Table = styled.table`\n  transition: 0.3s all;\n\n  &:hover {\n    background: ${colors.primary};\n  }\n`;\n\nexport { Button, CircleButton, Input, Table };\n","import * as React from 'react';\nimport { Control, useFormState } from 'react-hook-form';\n\nimport colors from './colors';\nimport { CircleButton, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  setVisible: any;\n  control: Control;\n};\n\nconst Header = ({ setVisible, control }: Props) => {\n  const { isValid } = useFormState({\n    control,\n  });\n\n  return (\n    <header\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 10,\n        backgroundColor: 'transparent',\n      }}\n    >\n      <p\n        style={{\n          ...paraGraphDefaultStyle,\n          margin: 0,\n          padding: 0,\n          fontWeight: 400,\n          fontSize: 12,\n        }}\n      >\n        <span\n          style={{\n            transition: '0.5s all',\n            color: isValid ? colors.green : colors.lightPink,\n          }}\n        >\n          ■\n        </span>{' '}\n        React Hook Form\n      </p>\n      <CircleButton title=\"Close dev panel\" onClick={() => setVisible(false)}>\n        ✕\n      </CircleButton>\n    </header>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\nimport { get } from 'react-hook-form';\nimport isUndefined from 'lodash/isUndefined';\nimport isObject from 'lodash/isObject';\n\nimport colors from './colors';\nimport { Button, Table, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  isNative: boolean;\n  errorMessage: string | undefined;\n  errorType: string | undefined;\n  hasError: boolean;\n  type: string | undefined;\n  isTouched: boolean;\n  isDirty: boolean;\n  index: number;\n  fieldsValues: any;\n  name: string;\n  collapseAll: boolean;\n  refObject: any;\n};\n\nconst PanelTable = ({\n  refObject,\n  hasError,\n  isDirty,\n  fieldsValues,\n  isNative,\n  errorMessage,\n  errorType,\n  type,\n  isTouched,\n  name,\n  collapseAll,\n}: Props) => {\n  const [collapse, setCollapse] = React.useState(false);\n\n  React.useEffect(() => {\n    setCollapse(!collapseAll);\n  }, [collapseAll]);\n\n  let value = fieldsValues ? get(fieldsValues, name) : '';\n  let isValueWrappedInPre = false;\n\n  if (!isUndefined(value)) {\n    if (isObject(value)) {\n      try {\n        value = (\n          <pre style={{ margin: 0 }}>\n            <code style={{ fontSize: 12 }}>\n              {JSON.stringify(value, null, 2)}\n            </code>\n          </pre>\n        );\n        isValueWrappedInPre = true;\n      } catch {\n        value = <span>[Nested Object]</span>;\n      }\n    } else if (typeof value !== 'string') {\n      value = String(value);\n    }\n  }\n\n  return (\n    <Table\n      style={{\n        padding: '5px 8px',\n        width: '100%',\n        transition: '.3s all',\n        borderLeft: `2px solid ${\n          hasError ? colors.secondary : colors.buttonBlue\n        }`,\n        background: 'none',\n      }}\n    >\n      <thead>\n        <tr>\n          <td valign=\"top\" style={{ width: 85, lineHeight: '22px' }}>\n            <Button\n              onClick={() => setCollapse(!collapse)}\n              title=\"Toggle field table\"\n              style={{\n                border: `1px solid ${colors.lightBlue}`,\n                borderRadius: 2,\n                padding: '3px 5px',\n                display: 'inline-block',\n                fontSize: 9,\n                lineHeight: '13px',\n                width: 20,\n                textAlign: 'center',\n                marginRight: 8,\n              }}\n            >\n              {collapse ? '+' : '-'}\n            </Button>\n            <Button\n              onClick={() => {\n                if (refObject.scrollIntoView) {\n                  refObject.scrollIntoView({ behavior: 'smooth' });\n                }\n              }}\n              title=\"Scroll into view\"\n              style={{\n                border: `1px solid ${colors.lightBlue}`,\n                borderRadius: 2,\n                padding: '3px 5px',\n                display: 'inline-block',\n                fontSize: 9,\n                lineHeight: '13px',\n                textAlign: 'center',\n                width: 'calc(100% - 30px)',\n                ...(isNative\n                  ? {}\n                  : { cursor: 'not-allowed', background: colors.lightBlue }),\n              }}\n            >\n              {isNative ? 'Native' : 'Custom'}\n            </Button>\n          </td>\n          <td\n            style={{\n              display: 'block',\n              maxWidth: 140,\n            }}\n          >\n            <p\n              style={{\n                margin: 0,\n                padding: 0,\n                top: 0,\n                position: 'relative',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                ...paraGraphDefaultStyle,\n                lineHeight: '24px',\n              }}\n              title={name}\n            >\n              {name}\n            </p>\n          </td>\n        </tr>\n      </thead>\n      {!collapse && (\n        <tbody>\n          {type && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Type:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {type}\n              </td>\n            </tr>\n          )}\n          {errorType && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                ERROR Type:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {errorType}\n              </td>\n            </tr>\n          )}\n          {errorMessage && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                MESSAGE:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {typeof errorMessage === 'string'\n                  ? errorMessage.trim()\n                  : JSON.stringify(errorMessage)}\n              </td>\n            </tr>\n          )}\n          {!isUndefined(value) && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Value:\n              </td>\n              <td\n                data-testid={`${name}-field-value`}\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {!isValueWrappedInPre && (\n                  <p\n                    title={value}\n                    style={{\n                      ...paraGraphDefaultStyle,\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {value}\n                  </p>\n                )}\n                {isValueWrappedInPre && (\n                  <div\n                    style={{\n                      ...paraGraphDefaultStyle,\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {value}\n                  </div>\n                )}\n              </td>\n            </tr>\n          )}\n          {\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Touched:\n              </td>\n              <td>\n                <code\n                  style={{\n                    color: isTouched ? colors.green : colors.lightPink,\n                    ...paraGraphDefaultStyle,\n                    fontSize: 12,\n                  }}\n                >\n                  {isTouched ? 'true' : 'false'}\n                </code>\n              </td>\n            </tr>\n          }\n          {\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Dirty:\n              </td>\n              <td>\n                <code\n                  style={{\n                    color: isDirty ? colors.green : colors.lightPink,\n                    ...paraGraphDefaultStyle,\n                    fontSize: 12,\n                  }}\n                >\n                  {isDirty ? 'true' : 'false'}\n                </code>\n              </td>\n            </tr>\n          }\n        </tbody>\n      )}\n    </Table>\n  );\n};\n\nexport default PanelTable;\n","import * as React from 'react';\nimport { Animate } from 'react-simple-animate';\n\nimport colors from './colors';\nimport { Button, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  formState: any;\n  showFormState: boolean;\n  setShowFormState: (payload: boolean) => void;\n};\n\nconst FormStateTable = ({\n  formState,\n  showFormState,\n  setShowFormState,\n}: Props) => (\n  <div\n    style={{\n      alignSelf: 'end',\n    }}\n  >\n    <Animate\n      play={showFormState}\n      start={{ opacity: 0 }}\n      end={{ opacity: 1 }}\n      render={({ style }) => (\n        <table\n          style={{\n            padding: '5px 10px',\n            display: 'block',\n            background: 'black',\n            borderTop: `1px solid ${colors.lightPink}`,\n            pointerEvents: 'none',\n            ...style,\n          }}\n        >\n          <tbody>\n            <tr>\n              <td align=\"right\" style={{ width: 90, ...paraGraphDefaultStyle }}>\n                Valid:\n              </td>\n              <td\n                style={{\n                  color: formState.isValid ? colors.green : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isValid ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Dirty:\n              </td>\n              <td\n                style={{\n                  color: formState.isDirty ? colors.green : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isDirty ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Submitted:\n              </td>\n              <td\n                style={{\n                  color: formState.isSubmitted\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isSubmitted ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Count:\n              </td>\n              <td\n                style={{\n                  color: formState.submitCount\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.submitCount}\n              </td>\n            </tr>\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Submitting:\n              </td>\n              <td\n                style={{\n                  color: formState.isSubmitting\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isSubmitting ? 'true' : 'false'}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      )}\n    />\n    <Button\n      style={{\n        margin: 0,\n        width: '100%',\n        padding: '8px 10px',\n        textTransform: 'none',\n        fontSize: 12,\n        lineHeight: '14px',\n        cursor: 'pointer',\n      }}\n      title=\"Toggle form state panel\"\n      onClick={() => {\n        setShowFormState(!showFormState);\n      }}\n    >\n      <span\n        style={{\n          transition: '0.5s all',\n          color: formState.isValid ? colors.green : colors.lightPink,\n        }}\n      >\n        ■\n      </span>{' '}\n      Form State: {showFormState ? 'OFF' : 'ON'}\n    </Button>\n  </div>\n);\n\nexport default FormStateTable;\n","export function setVisible(state: any, payload: any) {\n  return {\n    ...state,\n    visible: payload,\n  };\n}\n\nexport function setCollapse(state: any, payload: any) {\n  return {\n    ...state,\n    isCollapse: payload,\n  };\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { Control, useForm, useWatch, useFormState, get } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\n\nimport colors from './colors';\nimport PanelTable from './panelTable';\nimport FormStateTable from './formStateTable';\nimport { Button, Input } from './styled';\nimport { setCollapse } from './settingAction';\n\nlet childIndex = 0;\n\nfunction PanelChildren<T, K, L, M, G>({\n  fields,\n  searchTerm,\n  touchedFields,\n  errors,\n  dirtyFields,\n  state,\n  fieldsValues,\n}: {\n  fields: T;\n  fieldsValues: K;\n  state: {\n    isCollapse: boolean;\n  };\n  searchTerm: string;\n  touchedFields: M;\n  errors: L;\n  dirtyFields: G;\n}) {\n  return (\n    <>\n      {fields &&\n        Object.entries(fields)\n          .filter(\n            ([name]) =>\n              ((name &&\n                name.toLowerCase &&\n                name.toLowerCase().includes(searchTerm)) ||\n                (!name && !searchTerm) ||\n                searchTerm === '') &&\n              name,\n          )\n          .map(([name, value], index) => {\n            childIndex++;\n\n            if (!value?._f) {\n              return (\n                <PanelChildren\n                  key={name + childIndex}\n                  {...{\n                    fields: value,\n                    searchTerm,\n                    touchedFields,\n                    errors,\n                    dirtyFields,\n                    state,\n                    fieldsValues,\n                  }}\n                />\n              );\n            } else {\n              const error = get(errors, value._f.name);\n              const errorMessage = get(error, 'message', undefined);\n              const errorType = get(error, 'type', undefined);\n              const type = get(value, 'ref.type', undefined);\n              const isTouched = !!get(touchedFields, value._f.name);\n              const isNative = !!(value && value._f.ref.type);\n              const isDirty = !!get(dirtyFields, value._f.name);\n              const hasError = !!error;\n              const ref = get(value, '_f.ref');\n\n              return (\n                <section\n                  key={value?._f.name + childIndex}\n                  style={{\n                    borderBottom: `1px dashed ${colors.secondary}`,\n                    margin: 0,\n                  }}\n                >\n                  <PanelTable\n                    refObject={ref}\n                    index={index}\n                    collapseAll={state.isCollapse}\n                    name={value?._f.name}\n                    isTouched={isTouched}\n                    type={type}\n                    hasError={hasError}\n                    isNative={isNative}\n                    errorMessage={errorMessage}\n                    errorType={errorType}\n                    isDirty={isDirty}\n                    fieldsValues={fieldsValues}\n                  />\n                </section>\n              );\n            }\n          })}\n    </>\n  );\n}\n\nconst Panel = ({ control, control: { _fields } }: { control: Control }) => {\n  const formState = useFormState({\n    control,\n  });\n  const { dirtyFields, touchedFields, errors } = formState;\n  formState.isDirty;\n  const { state, actions } = useStateMachine({\n    setCollapse,\n  });\n  const [, setData] = React.useState({});\n  const [showFormState, setShowFormState] = React.useState(false);\n  const fieldsValues = useWatch({\n    control,\n  });\n  const { register, watch } = useForm();\n  const searchTerm = watch('search', '');\n\n  useEffect(() => {\n    setData({});\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateRows: '56px auto',\n        height:\n          process.env.NODE_ENV === 'test' ? '100vh' : 'calc(100vh - 40px)',\n      }}\n    >\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `1fr 1fr`,\n          gridTemplateRows: '28px 28px',\n        }}\n      >\n        <Button\n          style={{\n            borderRight: `1px solid ${colors.primary}`,\n            textTransform: 'none',\n            fontSize: 11,\n            lineHeight: 1,\n          }}\n          title=\"Update values and state the form\"\n          onClick={() => setData({})}\n        >\n          ♺ REFRESH\n        </Button>\n        <Button\n          style={{\n            borderRight: `1px solid ${colors.primary}`,\n            textTransform: 'none',\n            fontSize: 11,\n            lineHeight: 1,\n          }}\n          title=\"Toggle entire fields\"\n          onClick={() => {\n            actions.setCollapse(!state.isCollapse);\n          }}\n        >\n          {state.isCollapse ? '[-] COLLAPSE' : '[+] EXPAND'}\n        </Button>\n\n        <Input\n          style={{\n            display: 'inline-block',\n            borderRadius: 0,\n            width: '100%',\n            margin: 0,\n            padding: '5px 10px',\n            WebkitAppearance: 'none',\n            appearance: 'none',\n            fontSize: 14,\n            border: 0,\n            color: 'white',\n            gridColumnStart: 1,\n            gridColumnEnd: 4,\n            background: 'black',\n          }}\n          {...register('search')}\n          placeholder=\"Filter name...\"\n          type=\"search\"\n        />\n      </div>\n\n      <div\n        style={{\n          overflow: 'auto',\n        }}\n      >\n        <PanelChildren\n          fields={_fields}\n          searchTerm={searchTerm}\n          errors={errors}\n          touchedFields={touchedFields}\n          dirtyFields={dirtyFields}\n          fieldsValues={fieldsValues}\n          state={state}\n        />\n      </div>\n\n      <FormStateTable\n        formState={formState}\n        showFormState={showFormState}\n        setShowFormState={setShowFormState}\n      />\n    </div>\n  );\n};\n\nexport default Panel;\n","import * as React from 'react';\n\nimport colors from './colors';\n\nconst Logo = ({\n  style,\n  actions,\n}: {\n  style?: Record<string, any>;\n  actions: {\n    setVisible: (arg: boolean) => void;\n  };\n}) => {\n  return (\n    <svg\n      fill=\"white\"\n      viewBox=\"0 0 100 100\"\n      style={{\n        height: 14,\n        padding: 3,\n        borderRadius: 2,\n        background: colors.lightPink,\n        ...style,\n      }}\n      onClick={() => {\n        actions.setVisible(true);\n      }}\n      aria-label=\"React Hook Form Logo\"\n    >\n      <path d=\"M73.56,13.32H58.14a8.54,8.54,0,0,0-16.27,0H26.44a11,11,0,0,0-11,11V81.63a11,11,0,0,0,11,11H73.56a11,11,0,0,0,11-11V24.32A11,11,0,0,0,73.56,13.32Zm-30.92,2a1,1,0,0,0,1-.79,6.54,6.54,0,0,1,12.78,0,1,1,0,0,0,1,.79h5.38v6.55a3,3,0,0,1-3,3H40.25a3,3,0,0,1-3-3V15.32ZM82.56,81.63a9,9,0,0,1-9,9H26.44a9,9,0,0,1-9-9V24.32a9,9,0,0,1,9-9h8.81v6.55a5,5,0,0,0,5,5h19.5a5,5,0,0,0,5-5V15.32h8.81a9,9,0,0,1,9,9Z\" />\n      <path\n        style={{ transform: 'translateX(-25px)' }}\n        d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n      />\n      <path d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\" />\n      <path\n        style={{ transform: 'translateX(-25px)' }}\n        d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n      />\n      <path d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\" />\n    </svg>\n  );\n};\n\nexport default Logo;\n","export type PLACEMENT =\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right';\n\nexport function getPositionByPlacement(\n  placement: PLACEMENT,\n  defaultX = 0,\n  defaultY = 0,\n) {\n  const [x, y] = placement.split('-');\n  return {\n    [x]: defaultX,\n    [y]: defaultY,\n  };\n}\n","import * as React from 'react';\nimport { Control } from 'react-hook-form';\nimport { Animate } from 'react-simple-animate';\n\nimport Header from './header';\nimport Panel from './panel';\nimport colors from './colors';\nimport Logo from './logo';\nimport { Button } from './styled';\nimport { useStateMachine } from 'little-state-machine';\nimport { setVisible } from './settingAction';\nimport { PLACEMENT, getPositionByPlacement } from './position';\n\nexport interface DevtoolUIProps {\n  control: Control<any>;\n  placement?: PLACEMENT;\n  /** Custom styles for the \"show/hide panel\" button and for the panel div */\n  styles?: {\n    /** Custom styles for the \"show/hide panel\" button */\n    button?: React.HTMLAttributes<HTMLButtonElement>['style'];\n    /** Custom styles for the panel div */\n    panel?: React.HTMLAttributes<HTMLDivElement>['style'];\n  };\n}\n\nexport const DevToolUI: React.FC<DevtoolUIProps> = ({\n  control,\n  placement = 'top-right',\n  styles,\n}) => {\n  const { state, actions } = useStateMachine({\n    setVisible,\n  });\n\n  const position = getPositionByPlacement(placement, 0, 0);\n\n  return (\n    <>\n      <Animate\n        play={state.visible}\n        duration={0.2}\n        start={{\n          ...position,\n          position: 'fixed',\n          transform: placement.includes('right')\n            ? 'translateX(280px)'\n            : 'translateX(-280px)',\n          zIndex: 99999,\n        }}\n        end={{\n          ...position,\n          position: 'fixed',\n          transform: 'translateX(0)',\n          zIndex: 99999,\n        }}\n      >\n        <div\n          style={{\n            ...position,\n            position: 'fixed',\n            height: '100vh',\n            width: 250,\n            zIndex: 99999,\n            background: colors.buttonBlue,\n            display: 'grid',\n            textAlign: 'left',\n            color: 'white',\n            fontSize: 14,\n            gridTemplateRows: '40px auto',\n            fontFamily:\n              \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n            ...styles?.panel,\n          }}\n        >\n          <Header setVisible={actions.setVisible} control={control} />\n          <Panel control={control} />\n        </div>\n      </Animate>\n\n      {!state.visible && (\n        <Button\n          title=\"Show dev panel\"\n          hideBackground\n          style={{\n            position: 'fixed',\n            zIndex: 99999,\n            ...getPositionByPlacement(placement, 3, 3),\n            padding: 3,\n            margin: 0,\n            background: 'none',\n            ...styles?.button,\n          }}\n        >\n          <Logo actions={actions} />\n        </Button>\n      )}\n    </>\n  );\n};\n","import get from 'lodash/get';\n\nexport function proxyToObject<T extends Record<string, any>>(proxy: T) {\n  return Reflect.ownKeys(proxy).reduce((prev, key) => {\n    prev[key as keyof T] = proxy[key as keyof T];\n    return prev;\n  }, {} as T);\n}\n\nexport function nestToFlat<V>(\n  flatKeys: string[],\n  obj: object,\n  defaultValue?: V,\n) {\n  return flatKeys.reduce((prev, name) => {\n    // nested field may be `undefined`\n    prev[name] = get(obj, name) || defaultValue;\n    return prev;\n  }, {} as Record<string, V>);\n}\n","import get from 'lodash/get';\nimport { useEffect, useState } from 'react';\nimport { Control, useFormState, useWatch } from 'react-hook-form';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { MessageData, UpdatePayload } from './types';\nimport { nestToFlat, proxyToObject } from './utils';\n\nexport function useExportControlToExtension({\n  id,\n  control,\n}: {\n  id: string;\n  control: Control<any>;\n}) {\n  const nestedFormValues = useWatch({ control });\n  const formState = useFormState({ control });\n\n  const [isExtensionEnabled, setIsExtensionEnabled] = useState(false);\n\n  const handleInitMessage = (message: MessageEvent<MessageData>) => {\n    if (\n      message.data.source !== 'react-hook-form-bridge' ||\n      message.data.type !== 'INIT'\n    ) {\n      return;\n    }\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'WELCOME',\n    } as MessageData);\n    setIsExtensionEnabled(true);\n  };\n\n  useEffect(() => {\n    window.addEventListener('message', handleInitMessage);\n    return () => window.removeEventListener('message', handleInitMessage);\n  }, []);\n\n  useDeepCompareEffect(() => {\n    if (!isExtensionEnabled) {\n      return;\n    }\n\n    const {\n      errors: nestedErrors,\n      dirtyFields: nestedDirtyFields,\n      touchedFields: nestedTouchedFields,\n      ...formStatus\n    } = proxyToObject(formState);\n\n    const flatFieldNames = [...control._names.mount];\n\n    const formValues = nestToFlat(flatFieldNames, nestedFormValues, '');\n    const dirtyFields = nestToFlat(flatFieldNames, nestedDirtyFields, false);\n    const touchedFields = nestToFlat(\n      flatFieldNames,\n      nestedTouchedFields,\n      false,\n    );\n    const flatErrors = nestToFlat<{ type?: string; message?: string }>(\n      flatFieldNames,\n      nestedErrors,\n    );\n\n    const errors = Object.entries(flatErrors).reduce((prev, [key, value]) => {\n      prev[key] = {\n        type: value?.type as string,\n        message: value?.message as string,\n      };\n      return prev;\n    }, {} as Record<string, { type?: string; message?: string }>);\n\n    const nativeFields = flatFieldNames.reduce((prev, name) => {\n      prev[name] = !!get(control._fields, name)?._f?.ref?.type;\n      return prev;\n    }, {} as Record<string, boolean>);\n\n    const updateMessagePayload: UpdatePayload = {\n      id,\n      data: {\n        formValues,\n        formState: {\n          errors,\n          dirtyFields,\n          touchedFields,\n          nativeFields,\n          ...formStatus,\n        },\n      },\n    };\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'UPDATE',\n      payload: updateMessagePayload,\n    } as MessageData);\n  }, [isExtensionEnabled, nestedFormValues, proxyToObject(formState)]);\n\n  return { isExtensionEnabled };\n}\n","import { createStore, StateMachineProvider } from 'little-state-machine';\nimport * as React from 'react';\nimport { Control, FieldValues, useFormContext } from 'react-hook-form';\nimport { v4 as generateUUID } from 'uuid';\nimport { DevToolUI, DevtoolUIProps } from './devToolUI';\nimport { useExportControlToExtension } from './extension/useExportControlToExtension';\nimport type { PLACEMENT } from './position';\n\nif (typeof window !== 'undefined') {\n  createStore(\n    {\n      visible: false,\n      isCollapse: false,\n      filterName: '',\n    },\n    {\n      name: '__REACT_HOOK_FORM_DEVTOOLS__',\n      middleWares: [],\n      storageType: window.localStorage,\n    },\n  );\n}\n\nexport const DevTool = <T extends FieldValues>(\n  props?: {\n    id?: string;\n    control?: Control<T>;\n  } & Pick<DevtoolUIProps, 'placement' | 'styles'>,\n) => {\n  const methods = useFormContext();\n\n  const uuid = React.useRef('');\n\n  React.useEffect(() => {\n    uuid.current = generateUUID();\n  }, []);\n\n  const { isExtensionEnabled } = useExportControlToExtension({\n    id: props?.id ?? uuid.current,\n    control: props?.control ?? methods.control,\n  });\n  if (isExtensionEnabled) {\n    return null;\n  }\n\n  return (\n    <StateMachineProvider>\n      <DevToolUI\n        control={props?.control ?? methods.control}\n        placement={props?.placement}\n        styles={props?.styles}\n      />\n    </StateMachineProvider>\n  );\n};\n\nexport type { PLACEMENT };\n"]},"metadata":{},"sourceType":"script"}